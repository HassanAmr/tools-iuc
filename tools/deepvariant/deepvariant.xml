<tool id="deepvariant" name="deepvariant" version="0.4.1">
    <description>Call genetic variants from next-generation DNA sequencing data</description>
    <requirements>
        <requirement type="package" version="0.4.1">deepvariant</requirement>
        <requirement type="package" version="1.3.1">samtools</requirement>
    </requirements>
    <command detect_errors="aggressive"><![CDATA[
        mkdir -p logs/ &&
        mkdir -p output.examples.tfrecord/ &&

        ln -s '${reads}' temp_reads_input.bam &&
        ln -s '${reads.metadata.bam_index}' temp_reads_input.bam.bai &&

        #set $reference_fasta_filename = "localref.fa"
        #if str( $reference_source.reference_source_selector ) == "history":
            ln -s '${reference_source.ref}' '${reference_fasta_filename}' &&
            samtools faidx "${reference_fasta_filename}" 2>&1 || echo "Error running samtools faidx for leftalign" >&2 &&
        #else:
            #set $reference_fasta_filename = str( $reference_source.ref.fields.path )
        #end if

        dv_make_examples.py
            --cores \${GALAXY_SLOTS:-2}
            --sample '${sample}'
            --ref '${reference_fasta_filename}'
            --reads temp_reads_input.bam
            --examples output.examples.tfrecord
            --regions '${regions}'
            --logdir logs
        &&
        dv_call_variants.py
            --cores \${GALAXY_SLOTS:-2}
            --sample '${sample}'
            --outfile call_variants_output.tfrecord
            --examples output.examples.tfrecord
        &&
        dv_postprocess_variants.py
            --ref '${reference_fasta_filename}'
            --infile call_variants_output.tfrecord
            --outfile '${output}'
        &&
        ## get logs into stdout
        cat logs/*
]]>
    </command>
    <inputs>
        <conditional name="reference_source">
            <param name="reference_source_selector" type="select" label="Choose the source for the reference genome">
                <option value="cached">Locally cached</option>
                <option value="history">History</option>
            </param>
            <when value="cached">
                <param argument="--reads" type="data" format="bam" label="Select alignment file in BAM format"
                       help="Aligned, sorted, indexed BAM file containing the reads we want to call. Should be aligned to a reference genome compatible with the reference file.">
                    <validator type="unspecified_build" />
                    <validator type="dataset_metadata_in_data_table" table_name="fasta_indexes" metadata_name="dbkey"
                               metadata_column="1" message="Sequences are not currently available for the specified build." />
                </param>
                <param  argument="--ref" type="select" label="Using reference genome">
                    <options from_data_table="fasta_indexes"></options>
                    <validator type="no_options" message="A built-in reference genome is not available for the build associated with the selected input file"/>
                </param>
            </when>
            <when value="history">
                <param argument="--reads" type="data" format="bam" label="Reads in BAM format"
                       help="Aligned, sorted, indexed BAM file containing the reads we want to call. Should be aligned to a reference genome compatible with the reference file." />
                <param argument="--ref" type="data" format="fasta" label="Using reference file" />
            </when>
        </conditional>
        <param name="sample" type="text" label="Sample"/>
        <param name="regions" type="text" label="Limit to specific regions" help="example: chr20:10,000,000-10,010,000"/>
    </inputs>
    <outputs>
        <data format="vcf" name="output"/>
    </outputs>
    <tests>
        <test>
            <param name="reference_source_selector" value="history" />
            <param name="reads" value="NA12878_S1.chr20.10_10p1mb.bam" />
            <param name="ref" value="ucsc.hg19.chr20.unittest.fasta" ftype="fasta" />
            <param name="sample" value="xyz" />
            <param name="regions" value="chr20:10,000,000-10,010,000" />
            <output name="output" file="output.vcf" />
        </test>
    </tests>
    <help>
<![CDATA[

    `DeepVariant <https://github.com/google/deepvariant>`_ is an analysis pipeline that uses a deep neural
    network to call genetic variants from next-generation DNA sequencing data.
    Please be ware, that DeepVariant currently only supports germline calling and single sample calling.

]]></help>
    <citations>
        <citation type="doi">10.1101/092890</citation>
    </citations>
</tool>
